name: Release

on:
    workflow_dispatch:
        inputs:
            version:
                description: 'Version'
                required: true
                type: string

permissions:
    contents: write

jobs:
    release:
        runs-on: ubuntu-latest
        outputs:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v3

            - name: Check if branch and version match
              id: guard
              run: |
                  MAJOR_VERSION="${NUMERIC_VERSION%%.*}"
                  BRANCH_MAJOR_VERSION="${BRANCH%%.*}"

                  if [ "$MAJOR_VERSION" != "$BRANCH_MAJOR_VERSION" ]; then
                    echo "Mismatched versions! Aborting."
                    VERSION_MISMATCH='true';
                  else
                    echo "Versions match! Proceeding."
                    VERSION_MISMATCH='false';
                  fi

                  echo "VERSION_MISMATCH=$(echo $VERSION_MISMATCH)" >> "$GITHUB_OUTPUT";
              env:
                  BRANCH: ${{ github.ref_name }}
                  NUMERIC_VERSION: ${{ github.event.inputs.version }}

            - name: Fail if branch and release tag do not match
              if: ${{ steps.guard.outputs.VERSION_MISMATCH == 'true' }}
              uses: actions/github-script@v7
              with:
                  script: |
                      core.setFailed('Workflow failed. Release version does not match with selected target branch. Did you select the correct branch?')

            - name: Set version on package.json
              run: node set-version.js ${{ github.event.inputs.version }}

            - name: Commit version change
              uses: stefanzweifel/git-auto-commit-action@v5
              with:
                  commit_message: 'Update version to ${{ github.event.inputs.version }}'

            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              with:
                  tag_name: ${{ github.event.inputs.version }}
                  release_name: ${{ github.event.inputs.version }}
                  body: 'Automated Release'
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    build-mac:
        needs: release
        runs-on: macos-latest
        strategy:
            matrix:
                node-version: ['21.x']
        steps:
            - uses: actions/checkout@v2

            - name: Setup Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '21.x'

            - name: Install NPM Dependencies
              run: npm install

            - name: Cleanup Mounted Volumes
              run: |
                  MOUNTED=$(hdiutil info | grep "/Volumes/TweakPHP-Installer" | awk '{print $1}')
                  if [ -n "$MOUNTED" ]; then
                      hdiutil detach "$MOUNTED" || true
                  fi

            - name: Make
              run: npm run make --platform=darwin --arch=universal --appVersion=${{ github.event.inputs.version }}
              env:
                  VITE_LSP_WEBSOCKET_PORT: 54331

            - name: Upload Release Asset
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ needs.release.outputs.upload_url }}
                  asset_path: ./out/make/zip/darwin/arm64/TweakPHP-darwin-arm64-${{ github.event.inputs.version }}.zip
                  asset_name: TweakPHP-${{ github.event.inputs.version }}.zip
                  asset_content_type: application/octet-stream
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
